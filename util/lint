#!/bin/sh
#
# lint
# Copyright Â© 2017 Matej Kosiarcik. All rights reserved.
# This file contains linting procedures for project [re]sources
#

# setup
set -euf
cd "$(dirname "${0}")"
. "./helpers.sh"
cd ".."

# Markdown
if check mdl; then
    mdl "." --git-recurse || true
fi

# Yaml
if check yamllint; then
    yamllint "." --format parsable --config-file ".yamllint.yml" || true
fi

# Shell
shell_files() { find "./Tools" -type f -not -name ".*" -and -not -name "*.md"; }
if check shellcheck; then
    shell_files | while IFS= read -r file; do
        shellcheck --external-sources "./Tools/helpers.sh" --format gcc "${file}" || true
    done
fi
if check shfmt; then
    shell_files | while IFS= read -r file; do
        shfmt -i 4 -p -l "${file}" \
            | sed -E "s~(.*)~\1: warning: file badly formatted, run 'format' script to resolve (bad_format)~"
    done
fi
# Invoke various shells with scripts for alternative linting via dry runs
if check sh; then
    shell_files | while IFS= read -r file; do
        sh -n "${file}" || true
    done
fi
if check bash; then
    shell_files | while IFS= read -r file; do
        bash -n "${file}" || true
        bash --posix -o pipefail -n "${file}" || true
        bash -o posix -o pipefail -n "${file}" || true
    done
fi
if check dash; then
    shell_files | while IFS= read -r file; do
        dash -n "${file}" || true
    done
fi
if check ksh; then
    shell_files | while IFS= read -r file; do
        ksh -n "${file}" || true
    done
fi
if check mksh; then
    shell_files | while IFS= read -r file; do
        mksh -n "${file}" || true
    done
fi
if check zsh; then
    shell_files | while IFS= read -r file; do
        zsh -n "${file}" || true
    done
fi
if check yash; then
    shell_files | while IFS= read -r file; do
        yash -n "${file}" || true
        yash --posix -n "${file}" || true
        yash -o posixly-correct -n "${file}" || true
    done
fi
